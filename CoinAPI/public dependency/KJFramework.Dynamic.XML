<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KJFramework.Dynamic</name>
    </assembly>
    <members>
        <member name="T:KJFramework.Dynamic.Components.DynamicDomainComponent">
            <summary>
                动态程序域组件抽象父类，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Components.IDynamicDomainComponent">
            <summary>
                动态程序域组件元接口，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.CheckHealth">
            <summary>
                检查当前组件的健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.GetTunnelAddress">
            <summary>
                获取此组件通讯隧道的地址
                <para>* 仅当该组件的IsUseTunnel = true时才有意义</para>
            </summary>
            <exception cref="T:System.NotSupportedException">不支持该功能</exception>
            <returns>返回隧道地址</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.SetTunnelAddresses(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                设置所有可联系组件的隧道地址
            </summary>
            <param name="addresses">隧道地址</param>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.GetTunnel``1(System.String)">
            <summary>
                获取指定组件的通讯隧道
            </summary>
            <param name="componentName">组件名称</param>
            <exception cref="T:System.ArgumentNullException">参数错误</exception>
            <exception cref="T:System.Exception">无法找到当前组件的通讯隧道地址，或者创建隧道失败</exception>
            <returns>返回指定组件的通讯隧道</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainComponent.UseTunnel``1(System.Boolean)">
            <summary>
                使用组件隧道技术
                <para>* 调用此方法， 将会开启该组件的通讯隧道功能，使得此组件可以被其他组件访问</para>
            </summary>
            <param name="metadataExchange">
                元数据开放标示
                <para>* 默认为不开放元数据</para>
            </param>
            <exception cref="T:System.Exception">开启失败</exception>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainComponent.Name">
            <summary>
                获取名称
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainComponent.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainComponent.IsUseTunnel">
            <summary>
                获取一个值，该值表示了当前是否开启了组件通讯隧道技术
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainComponent.TunnelVisitor">
            <summary>
                获取组件访问器
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainComponent.OwnService">
            <summary>
                获取或设置当前组件所宿主的服务
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.#ctor">
            <summary>
                动态程序域组件抽象父类，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.OnLoading">
            <summary>
                加载后需要做的动作
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.CheckHealth">
            <summary>
                检查当前组件的健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.GetTunnelAddress">
            <summary>
                获取此组件通讯隧道的地址
                <para>* 仅当该组件的IsUseTunnel = true时才有意义</para>
            </summary>
            <exception cref="T:System.NotSupportedException">不支持该功能</exception>
            <returns>返回隧道地址</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.SetTunnelAddresses(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                设置所有可联系组件的隧道地址
            </summary>
            <param name="addresses">隧道地址</param>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.GetTunnel``1(System.String)">
            <summary>
                获取指定组件的通讯隧道
            </summary>
            <param name="componentName">组件名称</param>
            <exception cref="T:System.ArgumentNullException">参数错误</exception>
            <exception cref="T:System.Exception">无法找到当前组件的通讯隧道地址，或者创建隧道失败</exception>
            <returns>返回指定组件的通讯隧道</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.UseTunnel``1(System.Boolean)">
            <summary>
                使用组件隧道技术
                <para>* 调用此方法， 将会开启该组件的通讯隧道功能，使得此组件可以被其他组件访问</para>
            </summary>
            <param name="metadataExchange">
                元数据开放标示
                <para>* 默认为不开放元数据</para>
            </param>
            <exception cref="T:System.Exception">开启失败</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.InnerStart">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.InnerStop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.InnerOnLoading">
            <summary>
                加载后需要做的动作
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainComponent.InnerCheckHealth">
            <summary>
                检查当前组件的健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.OwnService">
            <summary>
                获取或设置当前组件所宿主的服务
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.PluginInfo">
            <summary>
                获取或设置插件信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.Enable">
            <summary>
            获取或设置可用标示
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.PluginType">
            <summary>
            获取或设置插件类型
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.Name">
            <summary>
                获取名称
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.IsUseTunnel">
            <summary>
                获取一个值，该值表示了当前是否开启了组件通讯隧道技术
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.TunnelVisitor">
            <summary>
                获取组件访问器
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainComponent.RuleTable">
            <summary>
                获取程序域对象访问规则表
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Components.DynamicDomainObject">
            <summary>
                动态程序域对象，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Components.IDynamicDomainObject">
            <summary>
                动态程序域对象，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.CheckHealth">
            <summary>
                检查当前组件的健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.GetDomain">
            <summary>
                获取内部应用程序域
            </summary>
            <returns>返回应用程序域</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.Update">
            <summary>
                更新当前动态程序域
            </summary>
            <exception cref="T:KJFramework.Dynamic.Exceptions.DynamicDomainObjectUpdateFailedException">更新失败</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainObject.ReLease(System.TimeSpan)">
            <summary>
                重新续订组件的生命周期
            </summary>
            <param name="time">过期时间</param>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.Component">
            <summary>
                获取内部动态程序域组件
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.CreateTime">
            <summary>
                获取创建时间
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.LastUpdateTime">
            <summary>
                获取或设置上次更新时间
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.EntryInfo">
            <summary>
                获取应用程序域组建入口信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.Infomation">
            <summary>
                获取插件的详细信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainObject.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.IDynamicDomainObject.Exited">
            <summary>
                动态程序域对象退出事件
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.#ctor(KJFramework.Dynamic.Structs.DomainComponentEntryInfo)">
            <summary>
                动态程序域对象，提供了相关的基本操作。
            </summary>
            <param name="info">程序域组件信息</param>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.CheckHealth">
            <summary>
                检查当前组件的健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.GetDomain">
            <summary>
                获取内部应用程序域
            </summary>
            <returns>返回应用程序域</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.Update">
            <summary>
                更新当前动态程序域
            </summary>
            <exception cref="T:KJFramework.Dynamic.Exceptions.DynamicDomainObjectUpdateFailedException">更新失败</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainObject.ReLease(System.TimeSpan)">
            <summary>
                重新续订组件的生命周期
            </summary>
            <param name="time">过期时间</param>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.IsUpdating">
            <summary>
                获取或设置一个值，该值标示了当前组件是否正在升级中
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.OrgComponent">
            <summary>
                获取升级前的组件
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.OwnService">
            <summary>
                拥有的动态程序域服务对象
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.Component">
            <summary>
                获取内部动态程序域组件
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.EntryInfo">
            <summary>
                获取应用程序域组建入口信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.Infomation">
            <summary>
                获取插件的详细信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.CreateTime">
            <summary>
                获取创建时间
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.LastUpdateTime">
            <summary>
                获取或设置上次更新时间
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainObject.Exited">
            <summary>
                动态程序域对象退出事件
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainObject.WorkProcessing">
            <summary>
                工作状态回报事件
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainObject.Statistics">
            <summary>
                获取或设置统计器
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Components.DynamicDomainService">
            <summary>
                动态程序域服务，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Components.IDynamicDomainService">
            <summary>
                动态程序域服务元接口，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.Update">
            <summary>
                更新服务
            </summary>
            <returns>返回更新的状态</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.Update(System.String)">
            <summary>
                更新具有指定全名的组件
            </summary>
            <param name="fullname">组件全名</param>
            <returns>返回更新的状态</returns>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.CheckHealth">
            <summary>
                检查健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.IDynamicDomainService.GetObject(System.String)">
            <summary>
                根据组件名称获取一个程序域组件
            </summary>
            <param name="name">名称</param>
            <returns>返回获取到的程序域组件</returns>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainService.ComponentCount">
            <summary>
                获取内部组件数量
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainService.Tag">
            <summary>
                获取或设置附属属性
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainService.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainService.WorkRoot">
            <summary>
                获取工作目录
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.IDynamicDomainService.Infomation">
            <summary>
                获取服务描述信息
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.IDynamicDomainService.StartWork">
            <summary>
                开始工作
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.IDynamicDomainService.EndWork">
            <summary>
                停止工作
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.IDynamicDomainService.WorkingProcess">
            <summary>
                工作状态汇报事件
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.IDynamicDomainService.Updating">
            <summary>
                更新状态汇报事件
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.#ctor">
            <summary>
                动态程序域服务，提供了相关的基本操作。
                <para>* 使用此构造将会从配置文件中读取服务相关信息</para>
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.#ctor(KJFramework.Dynamic.Structs.ServiceDescriptionInfo)">
            <summary>
                动态程序域服务，提供了相关的基本操作。
            </summary>
            <param name="description">服务描述信息</param>
            <exception cref="T:System.ArgumentNullException">参数错误</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">工作目录错误</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.#ctor(System.String,KJFramework.Dynamic.Structs.ServiceDescriptionInfo)">
            <summary>
                动态程序域服务，提供了相关的基本操作。
            </summary>
            <param name="workRoot">工作目录</param>
            <param name="description">
                服务描述信息
                <para>* 如果传递null, 则默认从XML配置文件中读取</para>
            </param>
            <exception cref="T:System.ArgumentNullException">参数错误</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">工作目录错误</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.Initialize">
            <summary>
                初始化
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.Start">
            <summary>
                开始执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.Stop">
            <summary>
                停止执行
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.Update">
            <summary>
                更新服务
            </summary>
            <returns>返回更新的状态</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.Update(System.String)">
            <summary>
                更新具有指定全名的组件
            </summary>
            <param name="fullname">组件全名</param>
            <returns>返回更新的状态</returns>
            <exception cref="T:System.ArgumentNullException">参数不能为空</exception>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.CheckHealth">
            <summary>
                检查健康状况
            </summary>
            <returns>返回健康状况</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Components.DynamicDomainService.GetObject(System.String)">
            <summary>
                根据组件名称获取一个程序域组件
            </summary>
            <param name="name">名称</param>
            <returns>返回获取到的程序域组件</returns>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainService.ComponentCount">
            <summary>
                获取内部组件数量
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainService.Tag">
            <summary>
                获取或设置附属属性
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainService.Id">
            <summary>
                获取唯一标示
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainService.WorkRoot">
            <summary>
                获取或设置工作目录
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Components.DynamicDomainService.Infomation">
            <summary>
                获取服务描述信息
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainService.StartWork">
            <summary>
                开始工作
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainService.EndWork">
            <summary>
                停止工作
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainService.WorkingProcess">
            <summary>
                工作状态汇报事件
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Components.DynamicDomainService.Updating">
            <summary>
                更新状态汇报事件
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Configurations.InfoConfiguration">
            <summary>
                服务详细信息
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Configurations.InfoConfiguration.Name">
            <summary>
              服务名称
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Configurations.InfoConfiguration.ServiceName">
            <summary>
              服务全名
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Configurations.InfoConfiguration.Description">
            <summary>
              服务描述
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Configurations.InfoConfiguration.Version">
            <summary>
              服务版本
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Configurations.ServiceDescriptionConfigSection.Details">
            <summary>
              Dynamic Service配置项
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Exceptions.DynamicDomainObjectUpdateFailedException">
            <summary>
                动态程序域对象更新失败异常。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Extends.DynamicDomainObjectExtend.Wrap(KJFramework.Dynamic.Structs.DomainComponentEntryInfo)">
            <summary>
                将一个程序域组件入口点信息包装成一个动态程序域对象
            </summary>
            <param name="info">程序域组件入口点信息</param>
            <returns>返回动态程序域对象</returns>
        </member>
        <member name="T:KJFramework.Dynamic.Finders.BasicDynamicDomainComponentFinder">
            <summary>
                基础的动态程序域组件查找器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Finders.IDynamicDomainComponentFinder">
            <summary>
                动态程序域组件查找器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Finders.IDynamicFinder`1">
            <summary>
                动态查找器，提供了相关的基本操作。
            </summary>
            <typeparam name="T">查找类型</typeparam>
        </member>
        <member name="M:KJFramework.Dynamic.Finders.IDynamicFinder`1.Execute(System.String)">
            <summary>
                查找一个路径下所有的动态程序域组件
            </summary>
            <param name="path">查找路径</param>
            <returns>返回程序域组件入口点信息集合</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Finders.BasicDynamicDomainComponentFinder.Execute(System.String)">
            <summary>
                查找一个路径下所有的动态程序域组件
            </summary>
            <param name="path">查找路径</param>
            <returns>返回程序域组件入口点信息集合</returns>
        </member>
        <member name="T:KJFramework.Dynamic.Finders.BasicDynamicDomainServiceFinder">
            <summary>
                基础的动态程序域服务查找器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Finders.IDynamicDomainServiceFinder">
            <summary>
                动态程序域服务寻找器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Finders.BasicDynamicDomainServiceFinder.Execute(System.String)">
            <summary>
                查找一个路径下所有的动态程序域组件
            </summary>
            <param name="path">查找路径</param>
            <returns>返回程序域组件入口点信息集合</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Finders.BasicDynamicDomainServiceFinder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:KJFramework.Dynamic.Installers.DynamicServiceInstaller">
            <summary>
                动态服务安装器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Installers.DynamicServiceInstaller.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KJFramework.Dynamic.Installers.DynamicServiceInstaller.Install(KJFramework.Dynamic.Structs.DynamicDomainServiceInfo)">
            <summary>
                安装服务
            </summary>
            <param name="obj">安装对象</param>
            <returns>
                返回安装的状态
            </returns>
        </member>
        <member name="M:KJFramework.Dynamic.Installers.DynamicServiceInstaller.Install(KJFramework.Dynamic.Structs.DynamicDomainServiceInfo,System.String,System.String,System.String)">
            <summary>
                安装服务
            </summary>
            <param name="obj">安装对象</param>
            <param name="serviceName">服务名称</param>
            <param name="name">服务别名</param>
            <param name="description">服务描述</param>
            <returns>
                返回安装的状态
            </returns>
        </member>
        <member name="M:KJFramework.Dynamic.Installers.DynamicServiceInstaller.UnInstall(System.String)">
            <summary>
                卸载服务
            </summary>
            <param name="name">服务名</param>
            <returns>
                返回写在状态
            </returns>
        </member>
        <member name="T:KJFramework.Dynamic.Loaders.AssemblyLoader">
            <summary>
                程序集加载器
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Loaders.IDynamicLoader">
            <summary>
                动态加载器元接口，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Loaders.IDynamicLoader.Load(System.String[])">
            <summary>
                动态加载
            </summary>
            <param name="args">加载参数</param>
        </member>
        <member name="E:KJFramework.Dynamic.Loaders.IDynamicLoader.LoadSuccessfully">
            <summary>
                加载成功事件
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Loaders.IDynamicLoader.LoadFailed">
            <summary>
                加载失败事件
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Loaders.AssemblyLoader.#ctor(System.AppDomain)">
            <summary>
                程序集加载器
            </summary>
            <param name="currentDomain">要绑定的应用程序域</param>
        </member>
        <member name="M:KJFramework.Dynamic.Loaders.AssemblyLoader.Load(System.String[])">
            <summary>
                动态加载
                <para>* 此地方输入的路径应该为要加载全局Assembly的路径</para>
            </summary>
            <param name="args">加载参数</param>
        </member>
        <member name="E:KJFramework.Dynamic.Loaders.AssemblyLoader.LoadSuccessfully">
            <summary>
                加载成功事件
            </summary>
        </member>
        <member name="E:KJFramework.Dynamic.Loaders.AssemblyLoader.LoadFailed">
            <summary>
                加载失败事件
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation">
            <summary>
                动态程序域服务注册站，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.#ctor">
            <summary>
                动态程序域服务注册站，提供了相关的基本操作。
            </summary>
        </member>
        <member name="F:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.Instance">
            <summary>
                动态程序域服务注册站，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.Regist(KJFramework.Dynamic.Components.IDynamicDomainService)">
            <summary>
                注册一个动态程序域服务
                <para>* 如果已经存在当前要注册的动态程序域服务，则进行替换操作。</para>
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.UnRegist(System.String)">
            <summary>
                注销一个具有指定服务名称的动态程序域服务
            </summary>
            <param name="serviceName">服务名称</param>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.GetServiceHealth(System.String)">
            <summary>
                获取具有指定服务名称动态程序域服务健康状态
            </summary>
            <param name="serviceName">服务名称</param>
            <returns>返回健康状态</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.GetServiceNames">
            <summary>
                获取所有已注册动态程序与服务的名称列表
            </summary>
            <returns>返回名称列表</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.Update(System.String)">
            <summary>
                更新具有指定服务名称的动态程序域服务
            </summary>
            <param name="serviceName">服务名称</param>
            <returns>返回更新的状态</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.GetComponentByService(System.String,System.String)">
            <summary>
                根据指定的服务名称和组件名称来获取一个程序域组件
            </summary>
            <param name="serviceName">服务名称</param>
            <param name="moduleName">组件名称</param>
            <returns>返回获取到的程序域组件</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Pools.DynamicDomainServiceRegistation.GetService(System.String)">
            <summary>
                获取指定的服务对象
            </summary>
            <param name="serviceName">服务名称</param>
            <returns>返回服务对象</returns>
        </member>
        <member name="T:KJFramework.Dynamic.Statistics.DynamicDomainObjectStatistic">
            <summary>
                动态程序域对象统计器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Statistics.DynamicDomainObjectStatistic.Initialize``1(``0)">
            <summary>
            初始化
            </summary>
            <param name="element">统计类型</param>
            <typeparam name="T">统计类型</typeparam>
        </member>
        <member name="M:KJFramework.Dynamic.Statistics.DynamicDomainObjectStatistic.Close">
            <summary>
            关闭统计
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Structs.DomainComponentEntryInfo">
            <summary>
                程序域组件信息结构体
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DomainComponentEntryInfo.FilePath">
            <summary>
                获取或设置文件地址
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DomainComponentEntryInfo.FolderPath">
            <summary>
                获取或设置文件夹地址
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DomainComponentEntryInfo.EntryPoint">
            <summary>
                获取或设置入口点地址
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DomainComponentEntryInfo.Version">
            <summary>
                获取或设置版本信息
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Structs.DynamicDomainServiceInfo">
            <summary>
                动态程序域服务信息对象
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DynamicDomainServiceInfo.Service">
            <summary>
                获取或设置动态程序域服务
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DynamicDomainServiceInfo.FilePath">
            <summary>
                获取或设置文件地址
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.DynamicDomainServiceInfo.DirectoryPath">
            <summary>
                获取或设置目录信息
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Structs.ServiceDescriptionInfo">
            <summary>
                服务描述信息
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.ServiceDescriptionInfo.Name">
            <summary>
                获取或设置显示名称
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.ServiceDescriptionInfo.ServiceName">
            <summary>
                获取或设置服务名称
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.ServiceDescriptionInfo.Description">
            <summary>
                获取或设置服务描述
            </summary>
        </member>
        <member name="P:KJFramework.Dynamic.Structs.ServiceDescriptionInfo.Version">
            <summary>
                获取或设置服务版本
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable">
            <summary>
                程序域对象访问规则表，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Tables.IDomainObjectVisitRuleTable">
            <summary>
                程序域对象访问规则表元接口，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.IDomainObjectVisitRuleTable.Add(System.String,System.Func{System.Object[],System.Object})">
            <summary>
                添加一个访问规则
            </summary>
            <param name="key">访问键值</param>
            <param name="func">返回的对象</param>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.IDomainObjectVisitRuleTable.Remove(System.String)">
            <summary>
                移除一个具有指定访问键值的对象
            </summary>
            <param name="key">访问键值</param>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.IDomainObjectVisitRuleTable.Exists(System.String)">
            <summary>
                判断指定访问键值是否存在
            </summary>
            <param name="key">访问键值</param>
            <returns>获取是否存在的标示</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.IDomainObjectVisitRuleTable.Get``1(System.String,System.Object[])">
            <summary>
                获取具有指定名称的属性对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">属性名</param>
            <param name="args">调用参数</param>
            <returns>返回属性对象</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable.Add(System.String,System.Func{System.Object[],System.Object})">
            <summary>
                添加一个访问规则
            </summary>
            <param name="key">访问键值</param>
            <param name="func">返回的对象</param>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable.Remove(System.String)">
            <summary>
                移除一个具有指定访问键值的对象
            </summary>
            <param name="key">访问键值</param>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable.Exists(System.String)">
            <summary>
                判断指定访问键值是否存在
            </summary>
            <param name="key">访问键值</param>
            <returns>获取是否存在的标示</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Tables.DomainObjectVisitRuleTable.Get``1(System.String,System.Object[])">
            <summary>
                获取具有指定名称的属性对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="name">属性名</param>
            <param name="args">调用参数</param>
            <returns>返回属性对象</returns>
        </member>
        <member name="T:KJFramework.Dynamic.Visitors.ComponentTunnelVisitor">
            <summary>
                组件隧道访问器
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Visitors.IComponentTunnelVisitor">
            <summary>
                组件通道访问器元接口，提供了相关的基本操作
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.IComponentTunnelVisitor.GetTunnel``1(System.String)">
            <summary>
                获取指定组件的隧道
            </summary>
            <param name="componentName">组件名称</param>
            <returns>返回组件的隧道</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.ComponentTunnelVisitor.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                组件隧道访问器
            </summary>
            <param name="addresses">隧道地址集合</param>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.ComponentTunnelVisitor.GetTunnel``1(System.String)">
            <summary>
                获取指定组件的隧道
            </summary>
            <param name="componentName">组件名称</param>
            <returns>返回组件的隧道</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.ComponentTunnelVisitor.Create``1(System.String)">
            <summary>
                创建一个隧道
            </summary>
            <param name="address">隧道地址</param>
            <returns>返回创建好的隧道</returns>
        </member>
        <member name="T:KJFramework.Dynamic.Visitors.DynamicObjectVisitor">
            <summary>
                动态程序域对象访问器，提供了相关的基本操作。
            </summary>
        </member>
        <member name="T:KJFramework.Dynamic.Visitors.IDynamicObjectVisitor">
            <summary>
                动态对象访问器元接口，提供了相关的基本操作。
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.IDynamicObjectVisitor.GetObject``1(System.String,System.Object[])">
            <summary>
                获取一个具有指定名称的动态程序域组件
                <para>* 如果当前要获取的组件正在升级，则获取到的组件为升级前版本。</para>
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="flag">标记名称</param>
            <param name="args">可选参数</param>
            <returns>返回指定对象</returns>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.DynamicObjectVisitor.#ctor(KJFramework.Dynamic.Components.DynamicDomainComponent)">
            <summary>
                动态程序域对象访问器，提供了相关的基本操作。
            </summary>
            <param name="component">程序域组件</param>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.DynamicObjectVisitor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.DynamicObjectVisitor.GetObject``1(System.String,System.Object[])">
            <summary>
                获取一个具有指定名称的动态程序域组件
                <para>* 如果当前要获取的组件正在升级，则获取到的组件为升级前版本。</para>
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="flag">标记名称</param>
            <param name="args">可选参数</param>
            <returns>返回指定对象</returns>
        </member>
        <member name="P:KJFramework.Dynamic.Visitors.DynamicObjectVisitor.Statistics">
            <summary>
            获取或设置统计器
            </summary>
        </member>
        <member name="M:KJFramework.Dynamic.Visitors.Visitor.Create(KJFramework.Dynamic.Components.DynamicDomainComponent)">
            <summary>
                根据服务名称创建一个该服务的访问器
            </summary>
            <param name="component">程序域组件</param>
            <returns>返回服务访问器</returns>
        </member>
    </members>
</doc>
